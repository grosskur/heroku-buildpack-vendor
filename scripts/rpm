#!/bin/bash

# fail fast
set -o errexit
set -o nounset
set -o pipefail

indent() {
  sed -u 's/^/       /'
}

scriptname=$(basename $0)
case $# in
  4) :;;
  *) echo "$scriptname: usage: $scriptname BUILD_DIR CACHE_DIR DEST_DIR VERSION" >&2; exit 2;;
esac

build_dir="$1"
cache_dir="$2"
dest_dir="$3"
version="$4"

prefix=/app/.heroku/vendor
archive_dir=$cache_dir/archives
num_cpu=$(grep -c ^bogomips /proc/cpuinfo)

version_x=$(echo $version | sed 's/\.[0-9]*$/.x/')
base_url=http://rpm.org/releases/rpm-$version_x
extension=tar.bz2

package=$scriptname
dir=$package-$version
archive=$package-$version.$extension
url=$base_url/$archive

db_version=4.8.30
db_base_url=http://download.oracle.com/berkeley-db
db_extension=tar.gz
db_package=db
db_dir=$db_package-$db_version
db_archive=$db_package-$db_version.$db_extension
db_url=$db_base_url/$db_archive

mkdir -p $archive_dir
if [ ! -f $archive_dir/$archive ]
then
  echo "Downloading $url"
  rm -f $archive_dir/$archive.new
  curl -fsLS "$url" > $archive_dir/$archive.new
  mv $archive_dir/$archive.new $archive_dir/$archive
fi

if [ ! -f $archive_dir/$db_archive ]
then
  echo "Downloading $db_url"
  rm -f $archive_dir/$db_archive.new
  curl -fsLS "$db_url" > $archive_dir/$db_archive.new
  mv $archive_dir/$db_archive.new $archive_dir/$db_archive
fi

echo "Extracting $archive"
tar -C /tmp -xf $archive_dir/$archive

echo "Extracting $db_archive"
tar -C /tmp/$dir -xf $archive_dir/$db_archive

pushd /tmp/$dir
echo "Building $dir"
ln -s $db_dir $db_package
env CPPFLAGS="-I$prefix/include -I$prefix/include/nspr -I$prefix/include/nss" ./configure --prefix=$prefix --with-lua
make -j$num_cpu
make install DESTDIR=$dest_dir

# Delete unnecessary man pages
rm -rf ${dest_dir}$prefix/share
popd
